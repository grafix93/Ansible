---
- name: Install prerequisites
  apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
  loop: [ 'aptitude' ]

 #Install MariaDB server
- name: Install MariaDB Packages
  apt: name={{ item }} update_cache=yes state=latest
  loop: [ 'mariadb-server', 'python3-pymysql' ]

# Start MariaDB Service
- name: Start MariaDB service
  service:
    name: mariadb
    state: started
  become: true

- name: Install some common packages
  apt:
    name: "{{ common_packages }}"
  vars:
    common_packages:
      - python-apt
      - python-pymysql
      - python3-apt
      - python3-pymysql
  become: true

 # MariaDB Configuration
- name: Sets the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: creating database
  mysql_db:
    name: "{{ DB_NAME }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: creating user
  mysql_user:
    name: "{{ DB_USER }}"
    password: "{{ DB_PASSWORD }}"
    priv: "{{ DB_NAME }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Download WordPress
  get_url:
    url: "https://wordpress.org/latest.tar.gz"
    dest: "/tmp/wordpress.tar.gz"
    validate_certs: no

- name: Check if WordPress archive exists
  ansible.builtin.command: ls /tmp/wordpress.tar.gz
  register: wordpress_archive
  changed_when: false

- debug:
    var: wordpress_archive.stdout


- name: Extract WordPress
  ansible.builtin.unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /var/www/
    copy: no
  become: yes

- name: Update default Apache site
  become: yes
  lineinfile:
    dest: /etc/apache2/sites-enabled/{{ http_host }}.conf
    regexp: "(.)+DocumentRoot /var/www/html"
    line: "DocumentRoot /var/www/wordpress"
  notify:
    - Restart Apache

- name: Copy wp-config.php using template
  template:
    src: roles/apache/files/wp-config.php.j2
    dest: /var/www/wordpress/wp-config.php
  become: yes
